# ===========================================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===========================================

# Clave secreta para Flask (cambiar en producción)
SECRET_KEY=dev-secret-key-change-in-production

# Modo debug (True para desarrollo, False para producción)
FLASK_DEBUG=True

# ===========================================
# CONFIGURACIÓN DE SERVICIOS
# ===========================================

# API Flask
API_HOST=0.0.0.0
API_PORT=5001

# Interfaz Gradio
GRADIO_HOST=0.0.0.0
GRADIO_PORT=7860
GRADIO_SHARE=False

# ===========================================
# CONFIGURACIÓN DE CHROMADB
# ===========================================

# Servidor ChromaDB (configurado en docker-compose.yml)
CHROMA_HOST=localhost
CHROMA_PORT=8000
CHROMA_USE_HTTP=True

# ===========================================
# CONFIGURACIÓN DE RAG
# ===========================================

# Nombre de la colección en ChromaDB
RAG_COLLECTION_NAME=documents

# Modelo de embeddings para RAG
RAG_EMBEDDING_MODEL=all-MiniLM-L6-v2

# Configuración de chunking
RAG_CHUNK_SIZE=1000
RAG_CHUNK_OVERLAP=200

# ===========================================
# CONFIGURACIÓN DE GEMINI
# ===========================================

# API Key de Google Gemini (obtener desde Google AI Studio)
# https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# Modelo de Gemini a utilizar (recomendado: gemini-1.5-flash)
GEMINI_MODEL=gemini-1.5-flash

# ===========================================
# CONFIGURACIÓN DE ARCHIVOS
# ===========================================

# Tamaño máximo de archivo para upload (en bytes)
# 16MB = 16 * 1024 * 1024
MAX_CONTENT_LENGTH=16777216

# Directorio para archivos temporales
UPLOAD_FOLDER=./uploads

# ===========================================
# INSTRUCCIONES DE USO
# ===========================================

# 1. Copia este archivo a .env
# 2. Configura tu GEMINI_API_KEY
# 3. Ajusta CHROMA_HOST si ChromaDB está en otro servidor
# 4. Levanta ChromaDB con: docker-compose up -d chroma
# 5. Ejecuta la aplicación con: python run.py
